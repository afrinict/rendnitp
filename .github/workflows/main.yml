name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Verify Project Structure
      run: |
        echo "Checking project structure..."
        ls -la
        echo "Checking backend directory..."
        ls -la backend || true
        
    - name: Install Dependencies
      run: |
        echo "Installing frontend dependencies..."
        npm install
        echo "Installing backend dependencies..."
        cd backend && npm install && cd ..
        
    - name: Build Frontend
      run: |
        echo "Building frontend..."
        npm run build
        echo "Verifying build output..."
        ls -la deploy || true
        
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: Add SSH Known Hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Verify SSH Connection
      run: |
        echo "Testing SSH connection..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "echo 'SSH connection successful'"
        
    - name: Deploy
      run: |
        echo "Creating deployment directory..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /var/www/rendnitp"
        
        echo "Deploying frontend..."
        scp -r deploy/* ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}:/var/www/rendnitp/
        
        echo "Deploying backend..."
        scp -r backend/* ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }}:/var/www/rendnitp/backend/
        
        echo "Setting up backend..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "cd /var/www/rendnitp/backend && \
        npm install && \
        pm2 delete rendnitp || true && \
        pm2 start index.js --name rendnitp && \
        pm2 save"
        
        echo "Configuring Nginx..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "sudo cp /var/www/rendnitp/nginx.conf /etc/nginx/sites-available/rendnitp && \
        sudo ln -sf /etc/nginx/sites-available/rendnitp /etc/nginx/sites-enabled/ && \
        sudo nginx -t && \
        sudo systemctl reload nginx"
        
    - name: Verify Deployment
      run: |
        echo "Checking PM2 status..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "pm2 status"
        echo "Checking Nginx status..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "sudo systemctl status nginx"
        echo "Testing application..."
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} "curl -I http://localhost:3000 || true" 